/*!
 * vue-webgis v0.7.3
 */

import 'core-js/library/fn/object/get-own-property-descriptor';
import { _ as _objectSpread } from './chunk-786165bb.js';
import 'core-js/library/fn/object/get-own-property-symbols';
import 'core-js/library/fn/object/keys';
import 'core-js/library/fn/object/define-property';
import { _ as _createClass, a as _classCallCheck, b as _defineProperty } from './chunk-82f2c815.js';
import isEqual from 'lodash/isEqual';

var HistoryRecord =
/*#__PURE__*/
function () {
  function HistoryRecord(map) {
    var _this = this;

    _classCallCheck(this, HistoryRecord);

    _defineProperty(this, "_mapView", void 0);

    _defineProperty(this, "_data", []);

    _defineProperty(this, "_index", -1);

    _defineProperty(this, "_isAuto", false);

    _defineProperty(this, "_zoomInteractions", void 0);

    this._zoomInteractions = map.interactions.zoom;
    this._mapView = map.olView;

    this._add();

    map.olMap.on('moveend', function () {
      _this._add();
    });
  }

  _createClass(HistoryRecord, [{
    key: "change",
    value: function change(direction) {
      direction === 1 ? this._next() : this._prev();
    }
  }, {
    key: "clean",
    value: function clean() {
      this._data = [this._data[this._maxIndex]];

      this._changeIndex(0);
    }
  }, {
    key: "_next",
    value: function _next() {
      var index = Math.min(this._maxIndex, this._index + 1);

      this._changeIndex(index);
    }
  }, {
    key: "_prev",
    value: function _prev() {
      var index = Math.max(0, this._index - 1);

      this._changeIndex(index);
    }
  }, {
    key: "_changeIndex",
    value: function _changeIndex(index) {
      this._index = index;
      var history = this._data[index];

      this._zoomInteractions.animate(_objectSpread({}, history));

      this._isAuto = true;
    }
  }, {
    key: "_add",
    value: function _add() {
      if (this._isAuto) {
        this._isAuto = false;
        return;
      }

      var view = this._mapView;
      var history = {
        center: view.getCenter(),
        zoom: view.getZoom()
      };
      var lastHistory = this._data[this._maxIndex];

      if (!isEqual(history, lastHistory)) {
        var deleteCount = this._maxIndex - this._index;
        this._index++;

        if (deleteCount > 0) {
          this._data.splice(this._index, deleteCount, history);
        } else {
          this._data.push(history);
        }
      }
    }
  }, {
    key: "_maxIndex",
    get: function get() {
      return this._data.length - 1;
    }
  }]);

  return HistoryRecord;
}();

export default HistoryRecord;
//# sourceMappingURL=history-record-cc57ce41.js.map
