/*!
 * vue-webgis v0.7.3
 */

import { G as GISEvent } from './chunk-2f41c7fa.js';
import { a as _classCallCheck, b as _defineProperty, _ as _createClass } from './chunk-82f2c815.js';
import { _ as _inherits, a as _possibleConstructorReturn, b as _getPrototypeOf, c as _assertThisInitialized } from './chunk-537b1685.js';
import { T as ToggleActive } from './chunk-dd3bd2eb.js';
import DragBox from 'ol/interaction/DragBox';
import OlFeature from 'ol/Feature';
import { c as classMixin } from './chunk-cda7b711.js';

var BoxSelection =
/*#__PURE__*/
function (_classMixin) {
  _inherits(BoxSelection, _classMixin);

  function BoxSelection(map) {
    var _this;

    _classCallCheck(this, BoxSelection);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(BoxSelection).call(this, 'boxstart,boxend'));

    _defineProperty(_assertThisInitialized(_this), "_map", void 0);

    _defineProperty(_assertThisInitialized(_this), "_olMap", void 0);

    _defineProperty(_assertThisInitialized(_this), "_vectorSource", void 0);

    _defineProperty(_assertThisInitialized(_this), "_dragBox", void 0);

    _defineProperty(_assertThisInitialized(_this), "_feature", void 0);

    _this._map = map;
    _this._olMap = map.olMap;
    _this._vectorSource = map.vectorSource;
    map.eventHub.on('clear', function () {
      return _this.removeBoxFeature();
    });
    return _this;
  }

  _createClass(BoxSelection, [{
    key: "activateHandle",
    value: function activateHandle() {
      var _this2 = this;

      var map = this._map;
      map.toggleCursorStyle('crosshair');
      this._dragBox = new DragBox({
        minArea: 0
      });

      this._olMap.addInteraction(this._dragBox);

      this._dragBox.on('boxstart', function () {
        map.toggleSelectInteraction(false);

        _this2.dispatch('boxstart');
      });

      this._dragBox.on('boxend', function () {
        map.toggleSelectInteraction(true);

        var geometry = _this2._dragBox.getGeometry();

        var extent = geometry.getExtent();

        _this2.removeBoxFeature();

        _this2.addBoxFeature(new OlFeature({
          geometry: geometry
        }));

        _this2.dispatch('boxend', extent);
      });
    }
  }, {
    key: "deactivateHandle",
    value: function deactivateHandle() {
      this._map.toggleCursorStyle();

      this._olMap.removeInteraction(this._dragBox);

      this._dragBox = null;
    }
  }, {
    key: "addBoxFeature",
    value: function addBoxFeature(feature) {
      this._feature = feature;

      this._map.addFeature(this._feature);
    }
  }, {
    key: "removeBoxFeature",
    value: function removeBoxFeature() {
      this._map.removeFeature(this._feature);

      this._feature = null;
    }
  }]);

  return BoxSelection;
}(classMixin(GISEvent, ToggleActive));

export { BoxSelection as B };
//# sourceMappingURL=chunk-03adc81b.js.map
