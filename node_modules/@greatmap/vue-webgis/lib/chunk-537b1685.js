/*!
 * vue-webgis v0.7.3
 */

import iterator$1 from 'core-js/library/fn/symbol/iterator';
import symbol$1 from 'core-js/library/fn/symbol';
import getPrototypeOf$1 from 'core-js/library/fn/object/get-prototype-of';
import setPrototypeOf$1 from 'core-js/library/fn/object/set-prototype-of';
import create$1 from 'core-js/library/fn/object/create';

var iterator = iterator$1;

var symbol = symbol$1;

function _typeof2(obj) {
  if (typeof symbol === "function" && typeof iterator === "symbol") {
    _typeof2 = function _typeof2(obj) {
      return typeof obj;
    };
  } else {
    _typeof2 = function _typeof2(obj) {
      return obj && typeof symbol === "function" && obj.constructor === symbol && obj !== symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof2(obj);
}

function _typeof(obj) {
  if (typeof symbol === "function" && _typeof2(iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof symbol === "function" && obj.constructor === symbol && obj !== symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

var getPrototypeOf = getPrototypeOf$1;

var setPrototypeOf = setPrototypeOf$1;

function _getPrototypeOf(o) {
  _getPrototypeOf = setPrototypeOf ? getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

var create = create$1;

function _setPrototypeOf(o, p) {
  _setPrototypeOf = setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

export { _inherits as _, _possibleConstructorReturn as a, _getPrototypeOf as b, _assertThisInitialized as c, _typeof as d, _setPrototypeOf as e };
//# sourceMappingURL=chunk-537b1685.js.map
