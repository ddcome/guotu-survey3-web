/*!
 * vue-webgis v0.7.3
 */

import 'vue';
import 'core-js/modules/es6.function.name';
import 'core-js/modules/es7.array.includes';
import 'core-js/modules/es6.string.includes';
import 'core-js/modules/es6.array.find';
import 'core-js/modules/web.dom.iterable';
import 'core-js/modules/es6.object.keys';
import './chunk-8430f437.js';
import 'core-js/library/fn/array/is-array';
import './chunk-2f41c7fa.js';
import 'core-js/library/fn/array/from';
import 'core-js/library/fn/is-iterable';
import 'core-js/library/fn/object/define-property';
import { a as _classCallCheck, b as _defineProperty, _ as _createClass } from './chunk-82f2c815.js';
import 'core-js/library/fn/symbol/iterator';
import { _ as _inherits, a as _possibleConstructorReturn, b as _getPrototypeOf, c as _assertThisInitialized } from './chunk-537b1685.js';
import 'core-js/library/fn/symbol';
import 'core-js/library/fn/object/get-prototype-of';
import 'core-js/library/fn/object/set-prototype-of';
import 'core-js/library/fn/object/create';
import 'core-js/modules/es7.symbol.async-iterator';
import 'core-js/modules/es6.symbol';
import 'core-js/modules/es6.regexp.split';
import { S as SERVER_CONFIG } from './chunk-bc626433.js';
import 'axios';
import 'qs/lib/stringify';
import './chunk-81d749a9.js';
import { T as ToggleActive } from './chunk-dd3bd2eb.js';
import 'core-js/modules/es6.reflect.own-keys';
import 'core-js/library/fn/reflect/construct';
import { c as classMixin } from './chunk-cda7b711.js';
import { c as createOverlayAnalysis$1, a as createSummaryAnalysis$1, g as getAnalysisResult, b as createAnalysisService, d as createBuffersAnalysis, B as BaseAnalysis } from './chunk-fc6359dc.js';

var arcgisOrigin = SERVER_CONFIG.arcgisOrigin;
var superDataPath = SERVER_CONFIG.superDataPath;
function createOverlayAnalysis(_ref) {
  var serviceUrl = _ref.serviceUrl,
      serviceId = _ref.serviceId,
      name = _ref.name,
      bufferName = _ref.bufferName,
      serviceCode = _ref.serviceCode;
  return createOverlayAnalysis$1({
    serviceUrl: serviceUrl,
    serviceId: serviceId,
    name: name,
    inputLayer: {
      url: "".concat(arcgisOrigin, "/server/rest/services/DataStoreCatalogs/").concat(superDataPath, "/BigDataCatalogServer/").concat(serviceCode),
      name: "".concat(superDataPath, "-").concat(serviceCode)
    },
    overlayLayer: {
      url: "".concat(arcgisOrigin, "/server/rest/services/Hosted/").concat(bufferName, "/FeatureServer/0"),
      name: bufferName
    }
  });
}
function createSummaryAnalysis(_ref2) {
  var serviceUrl = _ref2.serviceUrl,
      serviceId = _ref2.serviceId,
      name = _ref2.name,
      overlayName = _ref2.overlayName;
  return createSummaryAnalysis$1({
    serviceUrl: serviceUrl,
    serviceId: serviceId,
    name: name,
    inputLayer: {
      url: "".concat(arcgisOrigin, "/server/rest/services/Hosted/").concat(overlayName, "/FeatureServer/0")
    }
  });
}

var BufferAnalysis =
/*#__PURE__*/
function (_classMixin) {
  _inherits(BufferAnalysis, _classMixin);

  function BufferAnalysis(map) {
    var _this;

    _classCallCheck(this, BufferAnalysis);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(BufferAnalysis).call(this, map));

    _defineProperty(_assertThisInitialized(_this), "_wkid", void 0);

    _defineProperty(_assertThisInitialized(_this), "_map", void 0);

    _this._wkid = map.mapConfig.wkid;
    _this._map = map;
    return _this;
  }

  _createClass(BufferAnalysis, [{
    key: "doAnalysis",
    value: function doAnalysis(extent, distance) {
      var _this2 = this;

      var dateId = Date.now();
      var bufferName = 'buffer_cs' + dateId;
      var overlayName = 'overlay_cs' + dateId;
      var summaryName = 'summary_cs' + dateId;

      var serviceCode = this._map.getTopVisibleLayer().id;

      return this._bufferAnalysis(serviceCode, bufferName, extent, distance).then(function () {
        return _this2._overlayAnalysis(serviceCode, overlayName, bufferName).then(function () {
          return _this2._summaryAnalysis(serviceCode, summaryName, overlayName).then(function () {
            return getAnalysisResult(summaryName, _this2._wkid).then(function (res) {
              _this2._map.interactions.zoom.toFeatures(_this2._map.renderFeatureData(res));

              return res;
            });
          });
        });
      });
    }
  }, {
    key: "_bufferAnalysis",
    value: function _bufferAnalysis(serviceCode, bufferName, extent, distance) {
      var _this3 = this;

      return createAnalysisService(bufferName).then(function (res) {
        return createBuffersAnalysis({
          serviceUrl: res.serviceurl,
          serviceId: res.itemId,
          extent: extent,
          wkid: _this3._wkid,
          distance: distance,
          name: bufferName,
          serviceCode: serviceCode
        }).then(function (res) {
          return _this3.getProgress('CreateBuffers', res.jobId);
        });
      });
    }
  }, {
    key: "_overlayAnalysis",
    value: function _overlayAnalysis(serviceCode, overlayName, bufferName) {
      var _this4 = this;

      return createAnalysisService(overlayName).then(function (res) {
        return createOverlayAnalysis({
          serviceUrl: res.serviceurl,
          serviceId: res.itemId,
          name: overlayName,
          bufferName: bufferName,
          serviceCode: serviceCode
        }).then(function (res) {
          return _this4.getProgress('OverlayLayers', res.jobId);
        });
      });
    }
  }, {
    key: "_summaryAnalysis",
    value: function _summaryAnalysis(serviceCode, summaryName, overlayName) {
      var _this5 = this;

      return createAnalysisService(summaryName).then(function (res) {
        return createSummaryAnalysis({
          name: summaryName,
          serviceUrl: res.serviceurl,
          serviceId: res.itemId,
          overlayName: overlayName,
          serviceCode: serviceCode
        }).then(function (res) {
          return _this5.getProgress('SummarizeAttributes', res.jobId);
        });
      });
    }
  }]);

  return BufferAnalysis;
}(classMixin(BaseAnalysis, ToggleActive));

export default BufferAnalysis;
//# sourceMappingURL=buffer-analysis-8c02bea6.js.map
