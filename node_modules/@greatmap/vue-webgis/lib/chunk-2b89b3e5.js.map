{"version":3,"file":"chunk-2b89b3e5.js","sources":["../src/gis/core/layer-management.js"],"sourcesContent":["import TileWMS from 'ol/source/TileWMS';\nimport Tile from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport TileGrid from 'ol/tilegrid/TileGrid';\nimport ImageArcGISRest from 'ol/source/ImageArcGISRest';\nimport { default as OlImageLayer } from 'ol/layer/Image';\n\nimport { gisServerAuth } from '../utils/gis-server-auth';\nimport { SERVER_CONFIG } from '../config/server';\n\n/**\n * @typedef {'wms'|'wmts'｜'image'} LayerType\n */\n\n/**\n * 图层管理类\n */\nexport default class LayerManagement {\n  _olMap;\n\n  constructor(olMap) {\n    this._olMap = olMap;\n  }\n\n  /**\n   * @typedef {Object} LayerOptions 创建图层配置选项\n   * @property {Number} [serverIdWMS] WMS 图层 ID\n   * @property {String} serviceCode 服务 ID\n   * @property {Number} zIndex 层级\n   * @property {Boolean} [visible] 是否展示\n   * @property {Array<Number>} [extent] 范围\n   * @property {Array<Number>} resolutions\n   * @property {Object} tileInfo 瓦片信息\n   * @property {String} projection\n   * @property {String} serverType MapServer/ImageServer\n   */\n\n  /**\n   * 添加图层\n   * @param {LayerType} type\n   * @param {LayerOptions} options\n   *\n   * @return {TileLayer|ImageLayer}\n   */\n  addLayer(type, options) {\n    // 获取图层实例\n    let layer;\n    switch (type) {\n      case 'wms':\n        layer = LayerManagement.createWMSLayer(options);\n        break;\n      case 'wmts':\n        layer = LayerManagement.createWMTSLayer(options);\n        break;\n      case 'image':\n        layer = LayerManagement.createImageLayer(options);\n        break;\n      default:\n    }\n\n    // 添加并返回\n    this._olMap.addLayer(layer);\n\n    return layer;\n  }\n\n  /**\n   * 移除图层\n   * @param {BaseLayer} olLayerRef\n   */\n  removeLayer(olLayerRef) {\n    this._olMap.removeLayer(olLayerRef);\n  }\n\n  /**\n   * 创建 WMS 图层\n   * @param {LayerOptions}\n   */\n  static createWMSLayer({ serverIdWMS, serviceCode, zIndex, visible = false }) {\n    const token = gisServerAuth.getToken();\n    const source = new TileWMS({\n      url: SERVER_CONFIG.arcgisService + serviceCode + '/MapServer/WMSServer',\n      params: {\n        LAYERS: serverIdWMS,\n        token\n      }\n      // 解决 canvas 的污染问题（canvas 的跨域属性，此设置将不设置 CORS 请求的凭据标志）\n      // 设置为空会导致 WMS 请求跨域\n      // crossOrigin: ''\n    });\n    return new Tile({\n      source,\n      zIndex,\n      visible\n    });\n  }\n\n  /**\n   * 创建 WMTS 图层\n   * @param {LayerOptions}\n   */\n  static createWMTSLayer({\n    serviceCode,\n    extent,\n    zIndex,\n    visible = false,\n    resolutions,\n    tileInfo,\n    projection\n  }) {\n    const token = gisServerAuth.getToken();\n    const tileInfoOrigin = tileInfo.origin;\n    const source = new XYZ({\n      tileGrid: new TileGrid({\n        extent,\n        resolutions,\n        tileSize: tileInfo.cols,\n        origin: [tileInfoOrigin.x, tileInfoOrigin.y]\n      }),\n      projection,\n      url: `${\n        SERVER_CONFIG.arcgisRestService\n      }${serviceCode}/ImageServer/tile/{z}/{y}/{x}?token=${token}`\n    });\n    return new Tile({\n      source,\n      zIndex,\n      visible\n    });\n  }\n\n  /**\n   * 创建 image 图层\n   * @param {LayerOptions}\n   */\n  static createImageLayer({\n    serviceCode,\n    serverType = 'MapServer',\n    serverId = '',\n    zIndex,\n    visible\n  }) {\n    const source = new ImageArcGISRest({\n      ratio: 1,\n      params: {\n        LAYERS: serverId,\n        token: gisServerAuth.getToken()\n      },\n      url: `${\n        SERVER_CONFIG.arcgis\n      }/server/rest/services/${serviceCode}/${serverType}`\n    });\n    return new OlImageLayer({\n      source,\n      zIndex,\n      visible\n    });\n  }\n}\n"],"names":["LayerManagement","olMap","_olMap","type","options","layer","createWMSLayer","createWMTSLayer","createImageLayer","addLayer","olLayerRef","removeLayer","serverIdWMS","serviceCode","zIndex","visible","token","gisServerAuth","getToken","source","TileWMS","url","SERVER_CONFIG","arcgisService","params","LAYERS","Tile","extent","resolutions","tileInfo","projection","tileInfoOrigin","origin","XYZ","tileGrid","TileGrid","tileSize","cols","x","y","arcgisRestService","serverType","serverId","ImageArcGISRest","ratio","arcgis","OlImageLayer"],"mappings":";;;;;;;;;;;;;IAiBqBA;;;2BAGPC,KAAZ,EAAmB;;;;;SACZC,MAAL,GAAcD,KAAd;;;;;6BAuBOE,MAAMC,SAAS;UAElBC,KAAJ;;cACQF,IAAR;aACO,KAAL;UACEE,KAAK,GAAGL,eAAe,CAACM,cAAhB,CAA+BF,OAA/B,CAAR;;;aAEG,MAAL;UACEC,KAAK,GAAGL,eAAe,CAACO,eAAhB,CAAgCH,OAAhC,CAAR;;;aAEG,OAAL;UACEC,KAAK,GAAGL,eAAe,CAACQ,gBAAhB,CAAiCJ,OAAjC,CAAR;;;;;;WAMCF,MAAL,CAAYO,QAAZ,CAAqBJ,KAArB;;aAEOA,KAAP;;;;gCAOUK,YAAY;WACjBR,MAAL,CAAYS,WAAZ,CAAwBD,UAAxB;;;;yCAO2E;UAArDE,WAAqD,QAArDA,WAAqD;UAAxCC,WAAwC,QAAxCA,WAAwC;UAA3BC,MAA2B,QAA3BA,MAA2B;8BAAnBC,OAAmB;UAAnBA,OAAmB,6BAAT,KAAS;UACrEC,KAAK,GAAGC,aAAa,CAACC,QAAd,EAAd;UACMC,MAAM,GAAG,IAAIC,OAAJ,CAAY;QACzBC,GAAG,EAAEC,aAAa,CAACC,aAAd,GAA8BV,WAA9B,GAA4C,sBADxB;QAEzBW,MAAM,EAAE;UACNC,MAAM,EAAEb,WADF;UAENI,KAAK,EAALA;;OAJW,CAAf;aAUO,IAAIU,IAAJ,CAAS;QACdP,MAAM,EAANA,MADc;QAEdL,MAAM,EAANA,MAFc;QAGdC,OAAO,EAAPA;OAHK,CAAP;;;;2CAmBC;UAPDF,WAOC,SAPDA,WAOC;UANDc,MAMC,SANDA,MAMC;UALDb,MAKC,SALDA,MAKC;gCAJDC,OAIC;UAJDA,OAIC,8BAJS,KAIT;UAHDa,WAGC,SAHDA,WAGC;UAFDC,QAEC,SAFDA,QAEC;UADDC,UACC,SADDA,UACC;UACKd,KAAK,GAAGC,aAAa,CAACC,QAAd,EAAd;UACMa,cAAc,GAAGF,QAAQ,CAACG,MAAhC;UACMb,MAAM,GAAG,IAAIc,GAAJ,CAAQ;QACrBC,QAAQ,EAAE,IAAIC,QAAJ,CAAa;UACrBR,MAAM,EAANA,MADqB;UAErBC,WAAW,EAAXA,WAFqB;UAGrBQ,QAAQ,EAAEP,QAAQ,CAACQ,IAHE;UAIrBL,MAAM,EAAE,CAACD,cAAc,CAACO,CAAhB,EAAmBP,cAAc,CAACQ,CAAlC;SAJA,CADW;QAOrBT,UAAU,EAAVA,UAPqB;QAQrBT,GAAG,YACDC,aAAa,CAACkB,iBADb,SAEA3B,WAFA,iDAEkDG,KAFlD;OARU,CAAf;aAYO,IAAIU,IAAJ,CAAS;QACdP,MAAM,EAANA,MADc;QAEdL,MAAM,EAANA,MAFc;QAGdC,OAAO,EAAPA;OAHK,CAAP;;;;4CAiBC;UALDF,WAKC,SALDA,WAKC;mCAJD4B,UAIC;UAJDA,UAIC,iCAJY,WAIZ;iCAHDC,QAGC;UAHDA,QAGC,+BAHU,EAGV;UAFD5B,MAEC,SAFDA,MAEC;UADDC,OACC,SADDA,OACC;UACKI,MAAM,GAAG,IAAIwB,eAAJ,CAAoB;QACjCC,KAAK,EAAE,CAD0B;QAEjCpB,MAAM,EAAE;UACNC,MAAM,EAAEiB,QADF;UAEN1B,KAAK,EAAEC,aAAa,CAACC,QAAd;SAJwB;QAMjCG,GAAG,YACDC,aAAa,CAACuB,MADb,mCAEsBhC,WAFtB,cAEqC4B,UAFrC;OANU,CAAf;aAUO,IAAIK,YAAJ,CAAiB;QACtB3B,MAAM,EAANA,MADsB;QAEtBL,MAAM,EAANA,MAFsB;QAGtBC,OAAO,EAAPA;OAHK,CAAP;;;;;;;;;"}