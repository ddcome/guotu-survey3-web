import { errorMessage } from '../../../utils/error-handler';
import GISEvent from '../common/gis-event';
import { getAnalysisProgress } from '../../api/analysis-service';
import { checkValidArray } from '../../../utils/check-array';

/**
 * 基础分析类
 */
export default class BaseAnalysis extends GISEvent {
  _intervalTime = 1500;
  _vectorSource;
  _map;

  constructor(map) {
    super('next');

    this._vectorSource = map.vectorSource;
    this._map = map;
  }

  /**
   * 获取分析进度
   * @description
   * 根据 `intervalTime` 事件轮询获取分析进度。
   * @param {String} name 服务名称
   * @param {String} id jobID
   * @return {Promise}
   */
  getProgress(name, id) {
    return new Promise((resolve, reject) => {
      const _this = this;
      (function polling() {
        getAnalysisProgress(name, id).then(
          /** @param {Object<string, *>} res */ (res) => {
            const status = res ? res.jobStatus : '';
            if (status === 'esriJobSucceeded') {
              resolve(res);
            } else if (status !== 'esriJobFailed') {
              setTimeout(() => polling(), _this._intervalTime);

              // 执行进度回调
              if (checkValidArray(res.messages)) {
                _this.dispatch('next', res.messages && res.messages.pop());
              }
            } else {
              errorMessage(res || res.message);
              reject(res);
            }
          },
          (error) => {
            errorMessage(error || error.message);
            reject(error);
          }
        );
      })();
    });
  }
}
