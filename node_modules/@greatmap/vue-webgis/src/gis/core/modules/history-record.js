import isEqual from 'lodash/isEqual';

/**
 * 地图历史记录管理类
 */
export default class HistoryRecord {
  _mapView;
  _data = []; // 历史记录数据
  _index = -1; // 历史记录当前 index
  _isAuto = false; // 是否是自动跳转
  _zoomInteractions;

  /**
   * 实例化历史记录管理
   * @param {Map} map  Map 实例对象
   */
  constructor(map) {
    this._zoomInteractions = map.interactions.zoom;
    this._mapView = map.olView;

    // 添加首次记录
    this._add();

    // 绑定事件
    map.olMap.on('moveend', () => {
      this._add();
    });
  }

  /**
   * 历史记录操作
   * @param {Number} direction 1 next -1 prev
   */
  change(direction) {
    direction === 1 ? this._next() : this._prev();
  }

  /**
   * 清空历史记录
   */
  clean() {
    this._data = [this._data[this._maxIndex]];
    this._changeIndex(0);
  }

  /**
   * 获取最大的 index
   * @private
   */
  get _maxIndex() {
    return this._data.length - 1;
  }

  /**
   * 下一个历史记录
   * @private
   */
  _next() {
    const index = Math.min(this._maxIndex, this._index + 1);
    this._changeIndex(index);
  }

  /**
   * 上一个历史记录
   * @private
   */
  _prev() {
    const index = Math.max(0, this._index - 1);
    this._changeIndex(index);
  }

  /**
   * 修改当前下标
   * @param {Number} index 设置的下标
   * @private
   */
  _changeIndex(index) {
    this._index = index;
    const history = this._data[index];
    this._zoomInteractions.animate({ ...history });
    this._isAuto = true;
  }

  /**
   * 添加一条新纪录
   * @private
   */
  _add() {
    // 过滤自动跳转
    if (this._isAuto) {
      this._isAuto = false;
      return;
    }

    const view = this._mapView;
    const history = {
      center: view.getCenter(),
      zoom: view.getZoom()
    };
    const lastHistory = this._data[this._maxIndex];

    // 过滤重复的
    if (!isEqual(history, lastHistory)) {
      const deleteCount = this._maxIndex - this._index;
      this._index++;
      if (deleteCount > 0) {
        this._data.splice(this._index, deleteCount, history);
      } else {
        this._data.push(history);
      }
    }
  }
}
