/**
 * 按需加载功能模块
 */

/**
 * 模块集合类型定义
 * @typedef {Object} Modules
 * @property {BufferAnalysis} bufferAnalysis
 * @property {HistoryRecord} historyRecord
 * @property {FeatureSelect} featureSelect
 * @property {ImageLayer} imageLayer
 * @property {Measure} measure
 * @property {LayerSwipe} layerSwipe
 * @property {DiffAnalysis} diffAnalysis
 * @property {IntersectAnalysis} intersectAnalysis
 */

// 存放所有模块（函数提供异步加载方式）
export const modules = {
  BufferAnalysis: () => import('./buffer-analysis'),
  HistoryRecord: () => import('./history-record'),
  FeatureSelect: () => import('./feature-select'),
  ImageLayer: () => import('./image-layer'),
  Measure: () => import('./measure'),
  LayerSwipe: () => import('./layer-swipe'),
  DiffAnalysis: () => import('./diff-analysis'),
  IntersectAnalysis: () => import('./intersect-analysis')
};

/**
 * 导入功能模块
 * @param {modules} name 功能模块名称
 * @return {Promise}
 */
export default function getModule(name) {
  if (modules.hasOwnProperty(name)) {
    return modules[name]().then((module) => module.default);
  } else {
    const msg = `${name} 模块不存在，是否已经注册？`;
    return Promise.reject(msg);
  }
}
