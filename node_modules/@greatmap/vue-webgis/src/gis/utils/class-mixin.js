/**
 * class 混入
 * @param {Array<Class>} Classes
 */
export default function classMixin(...Classes) {
  class Mix {
    constructor(...params) {
      for (const Class of Classes) {
        copyProperties(this, new Class(...params)); // 拷贝实例属性
      }
    }
  }

  for (const Class of Classes) {
    copyProperties(Mix, Class); // 拷贝静态属性
    copyProperties(Mix.prototype, Class.prototype); // 拷贝原型属性
  }

  return Mix;
}

function copyProperties(target, source) {
  for (const key of Reflect.ownKeys(source)) {
    if (key !== 'constructor' && key !== 'prototype' && key !== 'name') {
      const desc = Object.getOwnPropertyDescriptor(source, key);
      Object.defineProperty(target, key, desc);
    }
  }
}
