import { createOverlayAnalysis as baseCreateOverlayAnalysis } from '../analysis-service';
import { SERVER_CONFIG } from '../../config/server';

const arcgisOrigin = SERVER_CONFIG.arcgisOrigin;
const superDataPath = SERVER_CONFIG.superDataPath;

/**
 * 创建叠加分析
 * @param {String} serviceUrl 服务 URL，创建服务返回
 * @param {String} serviceId 服务 ID，创建服务返回
 * @param {String} name overlay 服务名称
 * @param {String} inputServiceCode 输入图层服务名
 * @param {String} [inputFilter] 输入图层过滤值
 * @param {String} overlayServiceCode 叠加图层服务名
 * @param {String} [overlayFilter] 叠加图层过滤值
 * @param {String} [overlayType] 叠加类型
 * @returns {Promise}
 */
export function createOverlayAnalysis({
  serviceUrl,
  serviceId,
  name,
  inputServiceCode,
  inputFilter,
  overlayServiceCode,
  overlayFilter,
  overlayType = 'Erase'
}) {
  const inputLayer = {
    url: `${arcgisOrigin}/server/rest/services/DataStoreCatalogs/${superDataPath}/BigDataCatalogServer/${inputServiceCode}`,
    name: `${superDataPath}-${inputServiceCode}`
  };
  if (inputFilter) {
    inputLayer.filter = inputFilter;
  }

  const overlayLayer = {
    url: `${arcgisOrigin}/server/rest/services/DataStoreCatalogs/${superDataPath}/BigDataCatalogServer/${overlayServiceCode}`,
    name: `${superDataPath}-${overlayServiceCode}`
  };
  if (overlayFilter) {
    overlayLayer.filter = overlayFilter;
  }

  return baseCreateOverlayAnalysis({
    serviceUrl,
    serviceId,
    name,
    overlayType,
    inputLayer,
    overlayLayer
  });
}
